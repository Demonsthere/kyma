apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "name" . }}
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: {{ template "name" . }}
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
        traffic.sidecar.istio.io/excludeInboundPorts: "8443"
        prometheus.io/port: "{{ .Values.port.metrics }}"
        prometheus.io/path: "/"
        prometheus.io/scrape: "true"
      labels:
        app: {{ template "name" . }}
    spec:
      serviceAccountName: {{ template "name" . }}
      {{- if .Values.global.isLocalEnv }}
      hostAliases:
        - ip: {{ .Values.global.minikubeIP }}
          hostnames:
            - "dex.{{ .Values.global.ingress.domainName }}"
      {{- end }}
      {{- if or (eq .Values.global.certificates.type "legacy") (eq .Values.global.certificates.type "xip") }}
      initContainers:
        - name: apiserver-proxy-init
          image: eu.gcr.io/kyma-project/test-infra/alpine-kubectl:v20200617-32c1f3ff
          imagePullPolicy: IfNotPresent
          env:
            - name: TYPE
              value: "{{ .Values.global.certificates.type }}"
            - name: APISERVER_SERVICE_NAME
              value: "{{ template "name" . }}-ssl"
            - name: APISERVER_SERVICE_NAMESPACE
              value: "{{ .Release.Namespace }}"
            - name: APISERVER_SECRET_NAME
              value: "apiserver-proxy-tls-cert"
            - name: APISERVER_SECRET_NAMESPACE
              value: "{{ .Release.Namespace }}"
          command:
            - bash
            - -c
            - |
{{- if eq .Values.global.certificates.type "xip" }}
{{ .Files.Get "files/xip.sh" | printf "%s" | indent 14 }}
{{- else if eq .Values.global.certificates.type "legacy" }}
              echo "{{ .Values.global.tlsCrt }}" | base64 --decode > /etc/ca-tls-cert/tls.crt
{{- end }}
          volumeMounts:
            - name: ca-tls-cert
              mountPath: /etc/ca-tls-cert/
        {{- if eq .Values.global.certificates.type "xip" }}
            - name: manifests
              mountPath: /etc/manifests
              readOnly: true
        {{- end }}
      {{- end }}
      containers:
      - image: {{ .Values.global.containerRegistry.path }}/{{ .Values.global.apiserver_proxy.dir }}apiserver-proxy:{{ .Values.global.apiserver_proxy.version }}
        name: auth-proxy
        {{- if not .Values.global.isLocalEnv }}
        resources:
          limits:
            memory: 256Mi
          requests:
            memory: 96Mi
        {{- end }}
        imagePullPolicy: IfNotPresent
        args:
        - --insecure-listen-address=0.0.0.0:{{ .Values.port.insecure }}
        - --secure-listen-address=0.0.0.0:{{ .Values.port.secure }}
        - --tls-cert-file=/etc/tls-cert/tls.crt
        - --tls-private-key-file=/etc/tls-cert/tls.key
        - --upstream=https://kubernetes.default
        - --logtostderr=true
        - --v=9
        - --oidc-issuer=https://dex.{{ .Values.global.ingress.domainName }}
        - --oidc-clientID=kyma-client
      {{- if or (eq .Values.global.certificates.type "legacy") (eq .Values.global.certificates.type "xip") }}
        - --oidc-ca-file=/etc/ca-tls-cert/tls.crt
      {{- end }}
        - --cors-allow-origin={{ .Values.corsPolicy.allowOrigin | join "," }}
        - --cors-allow-headers={{ .Values.corsPolicy.allowHeaders | join "," }}
        - --cors-allow-methods={{ .Values.corsPolicy.allowMethods | join "," }}
        - --metrics-listen-address=0.0.0.0:{{ .Values.port.metrics }}
        ports:
        - containerPort: {{ .Values.port.insecure }}
          name: insecure
        - containerPort: {{ .Values.port.metrics }}
          name: metrics
        - containerPort: {{ .Values.port.secure }}
          name: secure
          {{- if .Values.global.isLocalEnv }}
          hostPort: {{ .Values.port.secure }}
          {{- end }}
        volumeMounts:
        - name: tls-cert
          mountPath: /etc/tls-cert/
      {{- if or (eq .Values.global.certificates.type "legacy") (eq .Values.global.certificates.type "xip") }}
        - name: ca-tls-cert
          mountPath: /etc/ca-tls-cert/
      {{- end }}
      volumes:
    {{- if or (eq .Values.global.certificates.type "legacy") (eq .Values.global.certificates.type "xip") }}
      - name: ca-tls-cert
        emptyDir: {}
      {{- if eq .Values.global.certificates.type "xip" }}
      - name: manifests
        configMap:
          name: {{ include "fullname" . }}-xip-certificate
      {{- end }}
     {{- end }}
      - name: tls-cert
        secret:
          secretName: {{ template "name" . }}-tls-cert
          optional: true
