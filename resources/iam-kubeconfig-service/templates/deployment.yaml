{{- $apiserverUrl := .Values.global.isLocalEnv | ternary "https://apiserver.$DOMAIN:9443" "https://apiserver.$DOMAIN" -}}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "name" . }}
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
spec:
  selector:
    matchLabels:
      app: {{ template "name" . }}
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    spec:
      {{- if .Values.global.isLocalEnv }}
      hostAliases:
      - ip: {{ .Values.global.minikubeIP }}
        hostnames:
          - "dex.{{ .Values.global.ingress.domainName }}"
      {{- end }}
      initContainers:
        - name: init
          image: eu.gcr.io/kyma-project/test-infra/alpine-kubectl:v20200617-32c1f3ff
          imagePullPolicy: IfNotPresent
          env:
            - name: TYPE
              value: "{{ .Values.global.certificates.type }}"
            - name: IS_LOCAL
              value: "{{ .Values.global.isLocalEnv }}"
          command:
            - bash
            - -c
            - |
{{ tpl (.Files.Get "files/init.sh" | printf "%s" | indent 14) . }}
          volumeMounts:
            - name: config
              mountPath: /injected-config/
      containers:
      - image: {{ .Values.global.containerRegistry.path }}/{{ .Values.global.iam_kubeconfig_service.dir }}iam-kubeconfig-service:{{ .Values.global.iam_kubeconfig_service.version }}
        name: {{ template "name" . }}
        command:
          - sh
          - -c
          - |
{{- if eq .Values.global.certificates.type "gardener" }}
            /app/app -kube-config-cluster-name=$(cat /injected-config/domain) -kube-config-url="https://apiserver.$(cat /injected-config/domain)" -kube-config-ca-file=/etc/apiserver-proxy-tls-cert/tls.crt -oidc-issuer-url=https://dex.{{ .Values.global.ingress.domainName }} -oidc-client-id=kyma-client
{{- else if .Values.global.isLocalEnv }}
            /app/app -kube-config-cluster-name=$(cat /injected-config/domain) -kube-config-url="https://apiserver.$(cat /injected-config/domain):9443" -kube-config-ca-file=/etc/apiserver-proxy-tls-cert/tls.crt -oidc-issuer-url=https://dex.{{ .Values.global.ingress.domainName }} -oidc-client-id=kyma-client -oidc-ca-file=/injected-config/ca-tls-cert.crt
{{- else }}
            /app/app -kube-config-cluster-name=$(cat /injected-config/domain) -kube-config-url="https://apiserver.$(cat /injected-config/domain)" -kube-config-ca-file=/etc/apiserver-proxy-tls-cert/tls.crt -oidc-issuer-url=https://dex.{{ .Values.global.ingress.domainName }} -oidc-client-id=kyma-client -oidc-ca-file=/injected-config/ca-tls-cert.crt
{{- end  }}
        ports:
          - name: http
            containerPort: 8000
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 9000
          initialDelaySeconds: 45
          periodSeconds: 10
          failureThreshold: 10
        resources:
{{ toYaml .Values.resources | indent 10 }}
        volumeMounts:
        - name: config
          mountPath: /injected-config/
        - name: apiserver-proxy-tls-cert
          mountPath: "/etc/apiserver-proxy-tls-cert"
          readOnly: true
      volumes:
      - name: config
        emptyDir: {}
      - name: apiserver-proxy-tls-cert
        secret:
          secretName: apiserver-proxy-tls-cert