apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
spec:
  addonComponents:
    grafana:
      enabled: false
    kiali:
      enabled: false
    prometheus:
      enabled: false
    tracing:
      enabled: false
  components:
    citadel:
      enabled: true
      k8s:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution: []
            requiredDuringSchedulingIgnoredDuringExecution: []
        env: []
        nodeSelector: {}
        replicaCount: 1
        strategy:
          rollingUpdate:
            maxSurge: 100%
            maxUnavailable: 25%
        tolerations: []
    cni:
      enabled: false
    egressGateways:
    - enabled: false
      name: istio-egressgateway
    galley:
      enabled: true
      k8s:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution: []
            requiredDuringSchedulingIgnoredDuringExecution: []
        nodeSelector: {}
        replicaCount: 1
        strategy:
          rollingUpdate:
            maxSurge: 100%
            maxUnavailable: 25%
        tolerations: []
    ingressGateways:
    - enabled: true
      k8s:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution: []
            requiredDuringSchedulingIgnoredDuringExecution: []
        env:
        - name: ISTIO_META_ROUTER_MODE
          value: sni-dnat
        nodeSelector: {}
        overlays:
        - kind: Deployment
          name: istio-ingressgateway
        podAnnotations: {}
        resources:
          limits:
            cpu: 2000m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 96Mi
        service:
          type: NodePort
        strategy:
          rollingUpdate:
            maxSurge: 1
            maxUnavailable: 0
        tolerations: []
      name: istio-ingressgateway
    nodeAgent:
      enabled: false
    pilot:
      enabled: true
      k8s:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution: []
            requiredDuringSchedulingIgnoredDuringExecution: []
        env:
        - name: GODEBUG
          value: gctrace=1
        - name: PILOT_HTTP10
          value: "1"
        - name: PILOT_PUSH_THROTTLE
          value: "100"
        nodeSelector: {}
        resources:
          limits:
            cpu: 500m
            memory: 1024Mi
          requests:
            cpu: 250m
            memory: 512Mi
        strategy:
          rollingUpdate:
            maxSurge: 1
            maxUnavailable: 0
        tolerations: []
    policy:
      enabled: true
      k8s:
        replicaCount: 1
        resources:
          limits:
            cpu: 500m
            memory: 2048Mi
          requests:
            cpu: 300m
            memory: 512Mi
        strategy:
          rollingUpdate:
            maxSurge: 1
            maxUnavailable: 0
    sidecarInjector:
      enabled: true
      k8s:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution: []
            requiredDuringSchedulingIgnoredDuringExecution: []
        nodeSelector: {}
        replicaCount: 1
        strategy:
          rollingUpdate:
            maxSurge: 100%
            maxUnavailable: 25%
        tolerations: []
    telemetry:
      enabled: true
      k8s:
        replicaCount: 1
        resources:
          limits:
            cpu: 500m
            memory: 2048Mi
          requests:
            cpu: 300m
            memory: 512Mi
        strategy:
          rollingUpdate:
            maxSurge: 1
            maxUnavailable: 0
  values:
    gateways:
      istio-ingressgateway:
        applicationPorts: ""
        autoscaleEnabled: false
        cpu:
          targetAverageUtilization: 80
        externalIPs: []
        labels:
          app: istio-ingressgateway
          istio: ingressgateway
        loadBalancerIP: ""
        loadBalancerSourceRanges: []
        meshExpansionPorts:
        - name: tcp-pilot-grpc-tls
          port: 15011
          targetPort: 15011
        - name: tcp-mixer-grpc-tls
          port: 15004
          targetPort: 15004
        - name: tcp-citadel-grpc-tls
          port: 8060
          targetPort: 8060
        - name: tcp-dns-tls
          port: 853
          targetPort: 853
        sds:
          enabled: true
          image: node-agent-k8s
          resources:
            limits:
              cpu: 50m
              memory: 64Mi
            requests:
              cpu: 10m
              memory: 16Mi
        secretVolumes:
        - mountPath: /etc/istio/ingressgateway-certs
          name: ingressgateway-certs
          secretName: istio-ingressgateway-certs
        - mountPath: /etc/istio/ingressgateway-ca-certs
          name: ingressgateway-ca-certs
          secretName: istio-ingressgateway-ca-certs
        type: NodePort
    global:
      controlPlaneSecurityEnabled: true
      disablePolicyChecks: false
      mtls:
        enabled: true
      policyCheckFailOpen: true
      proxy:
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 10m
            memory: 10Mi
    grafana:
      enabled: false
    kiali:
      enabled: false
    mixer:
      adapters:
        kubernetesenv:
          enabled: true
        prometheus:
          enabled: true
          metricsExpiryDuration: 10m
        stdio:
          enabled: false
          outputAsJson: true
        useAdapterCRDs: false
      policy:
        autoscaleEnabled: false
        cpu:
          targetAverageUtilization: 80
        enabled: true
      telemetry:
        autoscaleEnabled: false
        cpu:
          targetAverageUtilization: 80
        reportBatchMaxEntries: 100
        reportBatchMaxTime: 1s
        sessionAffinityEnabled: false
    pilot:
      autoscaleEnabled: false
      cpu:
        targetAverageUtilization: 80
      enableProtocolSniffingForInbound: false
      enableProtocolSniffingForOutbound: true
      image: pilot
      keepaliveMaxServerConnectionAge: 30m
      policy:
        enabled: true
      sidecar: true
      traceSampling: 1
    prometheus:
      enabled: false
    security:
      citadelHealthCheck: false
      createMeshPolicy: true
      enableNamespacesByDefault: true
      image: citadel
      selfSigned: true
      workloadCertTtl: 2160h
    sidecarInjectorWebhook:
      alwaysInjectSelector: []
      enableNamespacesByDefault: true
      image: sidecar_injector
      neverInjectSelector: []
      rewriteAppHTTPProbe: true
    tracing:
      enabled: false

