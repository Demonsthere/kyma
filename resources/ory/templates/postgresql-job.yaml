{{- if .Values.postgresql.enabled }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ template "ory.fullname" . }}-database-secret
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ template "ory.fullname" . }}-database-secret
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch", "patch"]
  resourceNames:
    - {{ template "ory.fullname" . }}-postgresql
    - {{ template "ory.fullname" . }}-hydra
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ template "ory.fullname" . }}-database-secret
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ template "ory.fullname" . }}-database-secret
subjects:
- kind: ServiceAccount
  name: {{ template "ory.fullname" . }}-database-secret
  namespace: {{ .Release.Namespace }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "ory.fullname" . }}-database-secret
spec:
  backoffLimit: 1
  template:
    metadata:
      name: {{ template "ory.fullname" . }}-database-secret
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: {{ template "ory.fullname" . }}-database-secret
      restartPolicy: Never
      initContainers:
      - name: wait-for-secret
        image: eu.gcr.io/kyma-project/test-infra/alpine-kubectl:v20190325-ff66a3a
        command: 
          - /bin/sh
          - -c
          - |
            until kubectl get secret -n {{ .Release.Namespace }} {{ template "ory.fullname" . }}-postgresql
            do
              echo "---> Secret is not ready yet"
              sleep 10
            done
      containers:
      - name: {{ template "ory.fullname" . }}-database-secret
        image: eu.gcr.io/kyma-project/test-infra/alpine-kubectl:v20190325-ff66a3a
        terminationMessagePolicy: "FallbackToLogsOnError"
        command:
          - /bin/bash
          - -c
          - |
            DB_PASSWORD=$(kubectl get secret -n {{ .Release.Namespace }} {{ template "ory.fullname" . }}-postgresql -o jsonpath='{.data.postgresql-password}' | base64 --decode)
            DSN="postgres://{{ .Values.global.postgresql.postgresqlUsername }}:${DB_PASSWORD}@ory-postgresql.{{ .Release.Namespace }}.svc.cluster.local:5432/{{ .Values.global.postgresql.postgresqlDatabase }}?sslmode=disable"
            
            PATCH=$(cat << EOF
            ---
            data:
              dsn: "$(echo $DSN | tr -d '\n' | base64 -w 0)"
            EOF
            )

            set +e
            msg=$(kubectl patch secret {{ template "ory.fullname" . }}-hydra --patch "${PATCH}" -n {{ .Release.Namespace }} 2>&1)
            status=$?
            set -e
            if [[ $status -ne 0 ]] && [[ ! "$msg" == *"not patched"* ]]; then
              echo "$msg"
              exit $status
            fi
            echo "---> Secret {{ template "ory.fullname" . }}-hydra patched"
{{- end }}
