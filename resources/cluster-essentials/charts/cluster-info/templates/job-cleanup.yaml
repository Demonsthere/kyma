---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "cluster-info.fullname" . }}-cleanup
  namespace: {{ .Release.Namespace }}
  annotations:
    helm.sh/hook: post-install, post-upgrade
    helm.sh/hook-delete-policy: "before-hook-creation"
    # helm.sh/hook-delete-policy: "before-hook-creation, hook-succeeded"
    helm.sh/hook-weight: "1"
spec:
  backoffLimit: 3
  template:
    metadata:
      name: {{ include "cluster-info.fullname" . }}-cleanup
      labels:
        app: {{ include "cluster-info.fullname" . }}-cleanup
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: {{ include "cluster-info.fullname" . }}-cleanup
      restartPolicy: Never
      containers:
        - name: {{ include "cluster-info.fullname" . }}-cleanup
          image: {{ .Values.jobs.image }}:{{ .Values.jobs.tag }}
          command:
            - /bin/bash
            - -c
            - |
{{ .Files.Get "files/cleanup.sh" | printf "%s" | nindent 14 }}
          terminationMessagePolicy: "FallbackToLogsOnError"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "cluster-info.fullname" . }}-cleanup
  namespace: {{ .Release.Namespace }}
  annotations:
    helm.sh/hook: post-install, post-upgrade
    helm.sh/hook-weight: "1"
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ include "cluster-info.fullname" . }}-cleanup
  annotations:
    helm.sh/hook: post-install, post-upgrade
    helm.sh/hook-weight: "1"
rules:
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs:
      - get
    resourceNames:
      - istio-system
      - kyma-system
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "create", "delete"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs:
      - get
      - delete
    resourceNames:
      - kyma-gateway-certs
      - apiserver-proxy-tls-cert
  - apiGroups: ["cert.gardener.cloud"]
    resources: ["certificates"]
    verbs:
      - get
      - delete
    resourceNames:
      - kyma-tls-cert
      - apiserver-proxy-tls-cert
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ include "cluster-info.fullname" . }}-cleanup
  namespace: {{ .Release.Namespace }}
  annotations:
    helm.sh/hook: post-install, post-upgrade
    helm.sh/hook-weight: "1"
subjects:
  - kind: ServiceAccount
    name: {{ include "cluster-info.fullname" . }}-cleanup
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: {{ include "cluster-info.fullname" . }}-cleanup
  apiGroup: rbac.authorization.k8s.io
